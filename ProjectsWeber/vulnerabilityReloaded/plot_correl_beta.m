clear;
close all;

%blackBody, blackBodyExt, cividis, coolWarmBent, coolWarmSmooth, inferno, jet, kindlmann, kindlmannExt, magma, plasma, viridis
%discrete: lines, prism
% colorMapName = 'grayscale'; 
colorMapName = 'plasma';
colorMap = importdata(['../../Plot/ColorMaps/',colorMapName,'.col']);

% cases= ["villasor","ferto","sanchegy","buk","lovo","nagycenk","vashegy","varis","becsidomb","tomalom",...
%     "szakov","kohegy","harka","pozsonyiut","sopronkovesd","dudlesz","ivan","agyagosszergeny","kofejto","simasag",...
%     "acsad","csaford","nagylozs","balf","csapod","und","rojtokmuzsaj","brennberg","pusztacsalad","kutyahegy",...
%     "nyarliget","meszlen","fertoujlak","gorbehalom","tozeggyarmajor","ebergoc","csillahegy","jerevan","gloriette",...
%     "ohermes","ujhermes"];

cases= ["ferto","sanchegy","lovo","nagycenk","vashegy","varis","becsidomb","tomalom",...
    "szakov","kohegy","harka","pozsonyiut","sopronkovesd","dudlesz","ivan","agyagosszergeny","kofejto","simasag",...
    "acsad","csaford","nagylozs","balf","csapod","und","rojtokmuzsaj","pusztacsalad","kutyahegy",...
    "nyarliget","meszlen","fertoujlak","gorbehalom","tozeggyarmajor","ebergoc","csillahegy","jerevan","gloriette",...
    "ohermes","ujhermes"];

idx = 1:27;

c1 = 0.8;
c2 = 0.4;
c3 = 0.0;

cor_beta_seg = zeros(size(idx));
cor_beta_pipes = zeros(size(idx));
cor_beta_cons = zeros(size(idx));
gamma = zeros(size(idx)); gamma_mat = zeros(size(idx));
gamma_seg = zeros(size(idx)); gamma_seg_mat = zeros(size(idx));
gamma_pipes = zeros(size(idx)); gamma_pipes_mat = zeros(size(idx));
gamma_cons = zeros(size(idx)); gamma_cons_mat = zeros(size(idx));

k=1;
for i=idx
    % beta and its approx
    beta = importdata(join(['Network Data/',cases(i),'/relativeDemandLoss.txt'],''));
    seg = importdata(join(['Network Data/',cases(i),'/sumSegments.txt'],''));
    pipes = importdata(join(['Network Data/',cases(i),'/sumPipes.txt'],''));
    cons = importdata(join(['Network Data/',cases(i),'/sumCons.txt'],''));
        
    % correlations
    cor_beta_seg(i) = corr(beta,seg,'type','Pearson');
    cor_beta_pipes(i) = corr(beta,pipes,'type','Pearson');
    cor_beta_cons(i) = corr(beta,cons,'type','Pearson');

    % failure rates
    fr_length = importdata(join(['Network Data/',cases(i),'_mat/failureRatePipe.txt'],'')); 
    fr_mat = importdata(join(['Network Data/',cases(i),'_mat/failureRateMaterial.txt'],''));
    
    % gammas
    gamma(i) = sum(beta.*fr_length);
    gamma_mat(i) = sum(beta.*fr_mat);
    gamma_seg(i) = sum(seg.*fr_length);
    gamma_seg_mat(i) = sum(seg.*fr_mat);
    gamma_pipes(i) = sum(pipes.*fr_length);
    gamma_pipes_mat(i) = sum(pipes.*fr_mat);
    gamma_cons(i) = sum(cons.*fr_length);
    gamma_cons_mat(i) = sum(cons.*fr_mat);
end

% correlations of gamma
cor_gamma(1) = corr(gamma',gamma_seg','type','Pearson');
cor_gamma(2) = corr(gamma',gamma_pipes','type','Pearson');
cor_gamma(3) = corr(gamma',gamma_cons','type','Pearson');
cor_gamma_mat(1) = corr(gamma_mat',gamma_seg_mat','type','Pearson');
cor_gamma_mat(2) = corr(gamma_mat',gamma_pipes_mat','type','Pearson');
cor_gamma_mat(3) = corr(gamma_mat',gamma_cons_mat','type','Pearson');

% PLOT VILLAGE

% figure();
% plot(delta,beta,'x');
% 
% figure();
% boxplot([cor_beta_1',cor_beta_2',cor_beta_3']);

figure('Position',[1000 200 400 600]);
hm = heatmap([cor_beta_seg',cor_beta_pipes',cor_beta_cons']);
hm.YLabel = 'Index of WDNs';
hm.ColorLimits=[0,1];
hm.Colormap = colorMap(:,2:4);
hm.XDisplayLabels={'Segment','Length','Demand'};
title('Pearson correlation coefficients');
set(gca,'fontsize',14);
% saveas(gca,'Plots/Correlations_beta.fig','fig');
% saveas(gca,'Plots/Correlations_beta.png','png');
% saveas(gca,'Plots/Correlations_beta.eps','epsc');

% figure();
% [r,g,b] = interp_colormap(c1,colorMap);
% plot(gamma,gamma_seg,'x','color',[r,g,b],'linewidth',2,'markersize',8)
% hold on; grid on;
% [r,g,b] = interp_colormap(c2,colorMap);
% plot(gamma,gamma_pipes,'o','color',[r,g,b],'linewidth',2,'markersize',8)
% [r,g,b] = interp_colormap(c3,colorMap);
% plot(gamma,gamma_cons,'+','color',[r,g,b],'linewidth',2,'markersize',8)
% plot([0,0.5],[0,0.5],'--','color',[.5,.5,.5],'linewidth',1.5);
% legend(join(['r_{Seg} = ',string(cor_gamma(1))]),join(['r_{Len} = ',string(cor_gamma(2))]),join(['r_{Dem} = ',string(cor_gamma(3))]),'location','northwest');
% xlabel('Network vulnerability');
% ylabel('Approximated network vulnerability');
% set(gca,'fontsize',14);
% saveas(gca,'Plots/Gamma_corr.fig','fig');
% saveas(gca,'Plots/Gamma_corr.png','png');
% saveas(gca,'Plots/Gamma_corr.eps','epsc');

figure('Position',[300 200 900 600]);
[r,g,b] = interp_colormap(c1,colorMap);
plot(gamma_mat,gamma_seg_mat,'x','color',[r,g,b],'linewidth',2,'markersize',8)
hold on; grid on;
[r,g,b] = interp_colormap(c2,colorMap);
plot(gamma_mat,gamma_pipes_mat,'o','color',[r,g,b],'linewidth',2,'markersize',8)
[r,g,b] = interp_colormap(c3,colorMap);
plot(gamma_mat,gamma_cons_mat,'+','color',[r,g,b],'linewidth',2,'markersize',8)
plot([0,0.5],[0,0.5],'--','color',[.5,.5,.5],'linewidth',1.5);
legend(join(['r_{Segment} = ',string(cor_gamma_mat(1))]),join(['r_{Length} = ',string(cor_gamma_mat(2))]),join(['r_{Demand} = ',string(cor_gamma_mat(3))]),'location','northwest','fontsize',14);
xlabel('Network vulnerability [-]');
ylabel('Approximated network vulnerability [-]');
set(gca,'fontsize',14);
% saveas(gca,'Plots/Gamma_mat_corr.fig','fig');
% saveas(gca,'Plots/Gamma_mat_corr.png','png');
% saveas(gca,'Plots/Gamma_mat_corr.eps','epsc');

% figure();
% boxplot([gamma',gamma_mat',gamma_seg',gamma_seg_mat',gamma_pipes',gamma_pipes_mat',gamma_cons',gamma_cons_mat']);
% 
% figure();
% boxplot([((gamma_seg-gamma)./gamma)',((gamma_seg_mat-gamma_mat)./gamma_mat)'...
%     ((gamma_pipes-gamma)./gamma)',((gamma_pipes_mat-gamma_mat)./gamma_mat)'...
%     ((gamma_cons-gamma)./gamma)',((gamma_cons_mat-gamma_mat)./gamma_mat)']);
% 
% figure();
% boxplot([(gamma_seg-gamma)',(gamma_seg_mat-gamma_mat)'...
%     (gamma_pipes-gamma)',(gamma_pipes_mat-gamma_mat)'...
%     (gamma_cons-gamma)',(gamma_cons_mat-gamma_mat)']);


function [r,g,b] = interp_colormap(c,colorMap)
    r = min(1,max(0,interp1(colorMap(:,1),colorMap(:,2),c,'spline')));
    g = min(1,max(0,interp1(colorMap(:,1),colorMap(:,3),c,'spline')));
    b = min(1,max(0,interp1(colorMap(:,1),colorMap(:,4),c,'spline')));
end
